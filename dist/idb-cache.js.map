{"version":3,"file":"idb-cache.js","sources":["idb-cache.js"],"sourcesContent":["/**\n * @author Drecom Co.,Ltd. http://www.drecom.co.jp/\n */\nconst VERSION = 1;\nconst META_STORE_NAME = 'metastore';\nconst DATA_STORE_NAME = 'datastore';\nconst DATA_TYPE_STRING = 1;\nconst DATA_TYPE_ARRAYBUFFER = 2;\nconst DATA_TYPE_BLOB = 3;\nconst isIOS = /iP(hone|(o|a)d);/.test(navigator.userAgent); // iPhone、iPod、iPadをiOSとする\nexport default class IDBCache {\n    constructor(dbName, strageLimit) {\n        this._maxSize = 52428800; // 50MB\n        this._maxCount = 100;\n        this._defaultAge = 86400;\n        this._nowSize = 0;\n        this._metaCache = new Map();\n        this._indexedDB = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.OIndexedDB || window.msIndexedDB;\n        this._dbName = dbName;\n        if (strageLimit) {\n            if (strageLimit.size)\n                this._maxSize = strageLimit.size;\n            if (strageLimit.count)\n                this._maxCount = strageLimit.count;\n            if (strageLimit.defaultAge)\n                this._defaultAge = strageLimit.defaultAge;\n        }\n        this._initialize();\n    }\n    set(key, value, maxAge = this._defaultAge) {\n        return new Promise((resolve, reject) => {\n            this._serializeData(value, (data, meta) => {\n                if (meta.size === 0) {\n                    resolve();\n                    return;\n                }\n                this._open((db) => {\n                    const transaction = db.transaction([META_STORE_NAME, DATA_STORE_NAME], 'readwrite');\n                    const metaStore = transaction.objectStore(META_STORE_NAME);\n                    const dataStore = transaction.objectStore(DATA_STORE_NAME);\n                    const nowSeconds = Math.floor(Date.now() / 1000);\n                    meta.expire = nowSeconds + maxAge;\n                    transaction.oncomplete = (_event) => {\n                        transaction.oncomplete = null;\n                        const cacheMeta = this._metaCache.get(key);\n                        if (cacheMeta) {\n                            this._nowSize -= cacheMeta.size;\n                            this._metaCache.delete(key);\n                        }\n                        this._nowSize += meta.size;\n                        this._metaCache.set(key, meta);\n                        if (this._maxCount < this._metaCache.size || this._maxSize < this._nowSize) {\n                            this._cleanup();\n                        }\n                        resolve();\n                    };\n                    transaction.onerror = (_event) => {\n                        transaction.onerror = null;\n                        reject();\n                    };\n                    transaction.onabort = (_event) => {\n                        transaction.onabort = null;\n                        reject();\n                    };\n                    try {\n                        dataStore.put(data, key);\n                        metaStore.put(meta, key);\n                    }\n                    catch (e) {\n                        console.error(e);\n                        transaction.abort();\n                    }\n                });\n            });\n        });\n    }\n    get(key) {\n        return new Promise((resolve, reject) => {\n            this._open((db) => {\n                const transaction = db.transaction(DATA_STORE_NAME, 'readonly');\n                const dataStore = transaction.objectStore(DATA_STORE_NAME);\n                let request = dataStore.get(key);\n                request.onsuccess = (_event) => {\n                    const nowSeconds = Math.floor(Date.now() / 1000);\n                    const cacheMeta = this._metaCache.get(key);\n                    if (request.result && cacheMeta && nowSeconds < cacheMeta.expire) {\n                        this._deserializeData(request.result, cacheMeta, (data) => {\n                            resolve(data);\n                        });\n                    }\n                    else {\n                        resolve(undefined);\n                    }\n                };\n                request.onerror = (_event) => {\n                    reject();\n                };\n            }, () => {\n                reject();\n            });\n        });\n    }\n    delete(key) {\n        return new Promise((resolve, reject) => {\n            this._open((db) => {\n                const transaction = db.transaction([META_STORE_NAME, DATA_STORE_NAME], 'readwrite');\n                const metaStore = transaction.objectStore(META_STORE_NAME);\n                const dataStore = transaction.objectStore(DATA_STORE_NAME);\n                transaction.oncomplete = (_event) => {\n                    transaction.oncomplete = null;\n                    if (this._metaCache.has(key)) {\n                        this._metaCache.delete(key);\n                    }\n                    resolve();\n                };\n                transaction.onerror = (_event) => {\n                    transaction.onerror = null;\n                    reject();\n                };\n                transaction.onabort = (_event) => {\n                    transaction.onabort = null;\n                    reject();\n                };\n                try {\n                    dataStore.delete(key);\n                    metaStore.delete(key);\n                }\n                catch (e) {\n                    console.error(e);\n                    transaction.abort();\n                }\n            }, () => {\n                reject();\n            });\n        });\n    }\n    _initialize() {\n        this._open((db) => {\n            const hoge = Date.now();\n            console.warn(\"GET CACHE START\");\n            const transaction = db.transaction(META_STORE_NAME, 'readonly');\n            const metaStore = transaction.objectStore(META_STORE_NAME);\n            this._metaCache.clear();\n            this._nowSize = 0;\n            metaStore.openCursor().onsuccess = (event) => {\n                console.warn(\"GET CACHE\");\n                const cursor = event.target.result;\n                if (cursor) {\n                    this._metaCache.set(cursor.key, cursor.value);\n                    this._nowSize += cursor.value.size;\n                    cursor.continue();\n                }\n                ;\n            };\n            transaction.oncomplete = () => {\n                console.warn(\"GET CACHE COMP:\" + (Date.now() - hoge));\n                transaction.oncomplete = null;\n                this._metaCache = new Map([...this._metaCache.entries()].sort(function (a, b) {\n                    if (a[1].expire < b[1].expire)\n                        return -1;\n                    if (a[1].expire > b[1].expire)\n                        return 1;\n                    return 0;\n                }));\n                console.warn(\"SORT COMP:\" + (Date.now() - hoge));\n                this._cleanup();\n            };\n            // TODO:Error handling.\n        });\n    }\n    _cleanup() {\n        this._open((db) => {\n            const removeKeys = new Set();\n            const nowSeconds = Math.floor(Date.now() / 1000);\n            let tmpNowSize = this._nowSize;\n            let tmpNowCount = this._metaCache.size;\n            this._metaCache.forEach((meta, key) => {\n                if (meta.expire < nowSeconds || this._maxSize < tmpNowSize || this._maxCount < tmpNowCount) {\n                    removeKeys.add(key);\n                    tmpNowSize -= meta.size;\n                    tmpNowCount--;\n                }\n            });\n            if (0 < removeKeys.size) {\n                const transaction = db.transaction([META_STORE_NAME, DATA_STORE_NAME], 'readwrite');\n                const metaStore = transaction.objectStore(META_STORE_NAME);\n                const dataStore = transaction.objectStore(DATA_STORE_NAME);\n                transaction.oncomplete = (_event) => {\n                    transaction.oncomplete = null;\n                    removeKeys.forEach((key) => {\n                        if (this._metaCache.has(key))\n                            this._metaCache.delete(key);\n                    });\n                };\n                removeKeys.forEach((key) => {\n                    try {\n                        dataStore.delete(key);\n                        metaStore.delete(key);\n                    }\n                    catch (e) {\n                        transaction.abort();\n                    }\n                });\n            }\n        });\n    }\n    _createObjectStore(db, oldVersion) {\n        if (oldVersion < 1) {\n            // Structure of first edition\n            db.createObjectStore(META_STORE_NAME);\n            db.createObjectStore(DATA_STORE_NAME);\n        }\n    }\n    _open(success, error) {\n        let request = this._indexedDB.open(this._dbName, VERSION);\n        request.onupgradeneeded = (event) => {\n            request.onupgradeneeded = null;\n            this._createObjectStore(request.result, event.oldVersion);\n        };\n        request.onsuccess = (_event) => {\n            request.onsuccess = null;\n            success(request.result);\n        };\n        request.onerror = (_event) => {\n            request.onerror = null;\n            if (error)\n                error();\n        };\n    }\n    _serializeData(data, cb) {\n        const meta = {\n            type: 0,\n            size: 0,\n        };\n        if (typeof data === 'string') {\n            meta.type = DATA_TYPE_STRING;\n            meta.size = data.length;\n        }\n        else if (data instanceof ArrayBuffer) {\n            meta.type = DATA_TYPE_ARRAYBUFFER;\n            meta.size = data.byteLength;\n        }\n        else if (data instanceof Blob) {\n            meta.type = DATA_TYPE_BLOB;\n            meta.size = data.size;\n        }\n        else {\n            console.warn('Unsupported type value');\n        }\n        if (isIOS && meta.type === DATA_TYPE_BLOB) {\n            const reader = new FileReader();\n            reader.onload = (_event) => {\n                meta.size = reader.result.byteLength;\n                meta.mime = data.type;\n                cb(reader.result, meta);\n            };\n            reader.onerror = (_event) => {\n                meta.size = 0;\n                cb(null, meta);\n            };\n            reader.readAsArrayBuffer(data);\n        }\n        else {\n            cb(data, meta);\n        }\n    }\n    _deserializeData(data, meta, cb) {\n        let type = 0;\n        if (typeof data === 'string') {\n            type = DATA_TYPE_STRING;\n        }\n        else if (data instanceof ArrayBuffer) {\n            type = DATA_TYPE_ARRAYBUFFER;\n        }\n        else if (data instanceof Blob) {\n            type = DATA_TYPE_BLOB;\n        }\n        if (meta && meta.type === DATA_TYPE_BLOB && type === DATA_TYPE_ARRAYBUFFER) {\n            const blob = new Blob([data], { type: meta.mime });\n            cb(blob);\n        }\n        else {\n            cb(data);\n        }\n    }\n}\n"],"names":["VERSION","META_STORE_NAME","DATA_STORE_NAME","DATA_TYPE_STRING","DATA_TYPE_ARRAYBUFFER","DATA_TYPE_BLOB","isIOS","test","navigator","userAgent","IDBCache","dbName","strageLimit","_maxSize","_maxCount","_defaultAge","_nowSize","_metaCache","Map","_indexedDB","window","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","_dbName","size","count","defaultAge","_initialize","key","value","maxAge","Promise","resolve","reject","_serializeData","data","meta","_open","db","transaction","metaStore","objectStore","dataStore","nowSeconds","Math","floor","Date","now","expire","oncomplete","_event","cacheMeta","get","delete","set","_cleanup","onerror","onabort","put","e","console","error","abort","request","onsuccess","result","_deserializeData","undefined","has","hoge","warn","clear","openCursor","event","cursor","target","continue","entries","sort","a","b","removeKeys","Set","tmpNowSize","tmpNowCount","forEach","add","oldVersion","createObjectStore","success","open","onupgradeneeded","_createObjectStore","cb","type","length","ArrayBuffer","byteLength","Blob","reader","FileReader","onload","mime","readAsArrayBuffer","blob"],"mappings":"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"}